{
  "type": "ObiterDicta",
  "title": "OBITER DICTA: Computational Lexicography",
  "html": "<link rel=\"type\" href=\"ObiterDicta\"><h1 data-rel=\"title\">OBITER DICTA: <em>Computational Lexicography</em></h1>\n<p><em>Laurence Urdang</em></p>\n<p>I recently purchased a new computer, and, because\nit operated on a system different from the one of\nmy old computer, I asked a few friends to recommend\na word-processing package that I might.find useful.  I\nwas particularly interested in one that would allow me\nto designate a variety of typestyles during keyboard-ing,\nideally one that showed the styles on the monitor\nas the text was being typed.</p>\n<p>Those who are familiar with computers or do not\nwant to know about them should skip to the next paragraph.\nFor those who are unfamiliar with computers\nand the need for a word-processing package, I should\nexplain that when you buy what is fondly call a “personal”\ncomputer, you get three pieces of equipment\n(though they may be combined in some models or\nmakes): a rectangular box with some slots in the front\nand sockets in the back, a monitor, which is nothing but\na small TV set, and a keyboard, which looks like an\nordinary typewriter keyboard but, in many models sold\ntoday, has a number of additional keys alongside those\nfor the familiar alphanumeric characters: on mine, nestled\namong some control keys on the right side is what is\ncalled a “number pad,” which resembles the key arrangement\none sees on a small adding machine or calculator;\non the left side is a double bank of five keys\nmarked “F1” through “F10” which, when pressed alone\nor in combination with another key, perform certain\nfunctions, some of which are useful, others of which are\nevidently thought useful by the manufacturer but\nwhich I never use.  These boxes come with wires (called\ncables for some reason) that allow them to be connected\nto one another and into a power source.  The trick is\nthat they will not do anything unless and until you have\ninstalled what is called a Disk Operating System, which\ncomes with the machine.  After it has been installed, the\nDOS, as it is called (once identified, nothing in computerese\nis ever called by its full name again: a Personal\nComputer becomes a PC; a Disk Operating System\nbecomes a DOS; if it is made by a company called\nMicroSoft, it is called MS/DOS), performs certain functions,\nthough rarely any that anyone but a computer\nspecialist would want to perform.  In order to do something\nuseful, you have to buy a program, which is a\npackage consisting of a number of diskettes and a manual.\nA diskette is also called a “floppy”; the reason for\nthe name is not immediately apparent (nor why the\nitem is called a “diskette”, for that matter), but all\nbecomes clear.  The so-called diskette is a flat black\nsquare of rather tough plastic with a hole in the middle\nand an oblong slot on each of the flat sides; it is said to\nbe 5¼ inches square, but that is a lie: as the only person\nwho probably ever measured one of these things, I can\ntell you it is 5 3/16 inches square; that may seem irrelevant,\nbut it is only the beginning of the Great Deception.\nInside this square plastic casing (which you should\nnever open) is a flimsy flat black plastic papadum.  If\nthe diskette is placed in the slot of the machine, a motor\nengages the center of the disk inside and spins it around\nat a great speed so that portions of it are exposed as they\npass by the oblong slot, allowing them to be “written\non” or “read” by some device inside the box.  The diskettes\nthat contain programs have information on them\nthat the computer “understands” and translates into a\nnumber of commands that make the machine do certain\nthings.  The things done depend on what kind of\nprogram is on the diskette.</p>\n<p>I bought a word-processing program called Framework\nII.  It is quite versatile and, as I required, allows\nme to create certain kinds of files in which I am able to\nstyle the text as I wish, but I shall not go into that here.\nFramework is sold by Ashton-Tate, a Silicon-Valley concern\nthat makes quite good programs but, like most of\nthe “software” companies, produces such abominable\nmanuals with directions for using the programs that\nthey have to maintain a staff of several dozen “technical\npersonnel” who are on duty about 12 hours a day beginning\nat six in the morning (California time) merely in\norder to answer the questions of confused customers.\nThis failing appears to be endemic to the industry: I\nrecently spoke with an executive of Okidata, a manufacturer\nof a very good computer (laser) printer, who\ntold me that his technical staff answers 60,000 telephone\nqueries a month.  I pointed out to him that if they\nmade available a proper manual the number of calls\ncould probably be reduced to 6,000.  Only the telephone\ncompany was profiting from such ineptitude.</p>\n<p>But the foregoing is all preliminary and background\nto the main theme.  One of the services performed\nby Framework is in a program subroutine\ncalled Spelling Check.  I do not need a spelling checker,\nbut I have found it extremeely useful as a means for\nproofreading text that has been keyboarded into storage\nin the Framework program.  The way it works is\nthis: after completing an article, chapter of a book, or\nwhatever it is that I am working on, I press a few keys\nand the program automatically scans every word of\ntext, comparing each with a “dictionary” contained in\nthe program.  It is not really a dictionary, of course, in\nthe sense that is lacks definitions; it is merely a word\nlist.  I have not seen the word list, but, from the directory\nof programs I can invoke on the monitor, I know it\ncontains about 223,000 characters, or about 37,000\nwords.  Being a computer, the machine performs this\ncomparison checking very, very rapidly: it takes only a\nminute to “proofread” a file containing about 7,000\nwords.  The proofreading is slightly moronic, for the\nprogram cannot alert the user to an error like “an” for\n“and,” because “an” is a valid word in its memory; still,\nit is better than nothing.  If it encounters a word that is\nnot in its repertoire, it offers a choice of actions: at the\nstroke of a key or two you can ADD the word to the list;\nGO ON and ignore the word entirely; or EDIT the questionable\nitem (by correcting a typo, for instance).\nThere is another option called, SUGGEST, which, if invoked,\nlists up to seven or eight words that you might\nhave had in mind when you wrote the one that offended\nthe machine, and this brings me to the point of\nthis article.</p>\n<p>It seems unnecessary to point out that Framework\ncannot have a very sophisticated list of words if it has\nonly 37,000 in its memory, but I thought it might be\ninteresting to see what substitutions were evoked by\nSUGGEST.  In each listing below, the boldface word is\nthe word at which Framework stopped, offering to\nSUGGEST a substitute; the words following are the substitutions\nit suggested.  Where ellipses occur, I have not\nbothered to copy down the entire list of offerings, selecting\nonly those that struck me as odd, either because\nof the incongruity of the choice or because I could not,\nin the wildest flights of dyslexic, schizophrenic-fancy,\nimagine the criteria employed in arriving at the selections.\nI am fully aware that some of the words in my\ntext are not everyday items you find about the house,\nbut I included those anyway; attention is drawn, particularly,\nto the suggestions for the more common\nwords.</p>\n<blockquote>\n<p><em>arthropods</em> - arthropod, arthritis, arthritides, Orthodox,\narthritic</p>\n<p><em>gallium</em> - galling, gleam, galleon, gulling, gallon,\ngelling, gullying, gamily</p>\n<p><em>thermionic</em> - sermonic, thorniness, sermonize,\nthermoset, theorematic, thermometer</p>\n<p><em>interstellar</em> - interstate, interstitial, interstice, interceder,\nunderscore, understate</p>\n<p>q.v. - TV</p>\n<p><em>caecum</em> - chicane, cocaine, cocoon, caucus,\ncaching, cactus, coaching</p>\n<p><em>Myriapoda</em> - moribund, morbidly, marriageable,\nmarigolds, moratoria, marauding</p>\n<p><em>vermiform</em> - forevermore, Vermonter, verifiers,\nvermicular, formicary, forefinger</p>\n<p><em>neuromuscular</em> - murmurously</p>\n<p><em>nucleic</em> - nucleate, nutlike, neglect, knuckled,\nnutlet, nickeled, niggled</p>\n<p><em>streptococcus</em> - stereopticons, scrupulosities, stroboscopes</p>\n<p><em>staphylococcus</em> - sycophantically, sycophantishly</p>\n<p><em>lakeside</em>-lattice, legislate, legalized, localized,\nleakiest, ladyship, regicide</p>\n<p><em>Algonquian</em> - Eglantine, Halogenating, Accounting,\nEglantines, Ugandans, Accountant</p>\n<p><em>yellowjackets</em> - illogicality, illogicalities</p>\n<p><em>unmanageable</em> - unimaginable, manageable, inimitable,\nmanageably, amendable</p>\n<p><em>breastfeeding</em> - breathtaking</p>\n<p><em>horseracing</em> - resurfacing, reassuring</p>\n<p><em>childbearing</em> - ...chalkboards</p>\n<p><em>unemotional</em> - ...emanational, unmentionable,\nunanimously</p>\n<p><em>nonflammable</em> - mentionable, nonviolently, monosyllable,\nnonvolatile</p>\n<p><em>reawakens</em> - weakens, wakens, reddens, rattans,\nweaklings, walk-ins, walk-ons</p>\n<p><em>Beaujolais</em> - beguiles, bobtails, beauteous, bodiless,\nbeauties, bellicose</p>\n<p><em>Bordeaux</em> - burdocks, bureaux, broadax, paradox,\nbirdseed, bordellos, birdhouse</p>\n</blockquote>\n<p>...Well, you get the idea.  I had some fun substituting\nthe program's words in my sentences and in simple\nsentences, too.  For instance,</p>\n<blockquote>\n<p><em>All arachnids and insects are arthritic</em>.</p>\n<p><em>Scientists at NASA are developing an interstate\nrocket that will take 20 light-years to complete\nits journey</em>.</p>\n<p><em>They removed his formicary appendix</em>.  (No wonder\nhe acted as if he had ants in his pants!)</p>\n<p><em>Some children are unimaginable at the age of\nfive</em>.</p>\n<p><em>Why is she still breathtaking when her child is\nalready four?</em></p>\n<p><em>Steve Cauthens has devoted his life to resurfacing</em>.</p>\n<p><em>The prisoner was unmentionable when the verdict\nwas read out</em>.</p>\n<p><em>I certainly do enjoy some bordellos or beauties\nwith my steak</em>.</p>\n</blockquote>\n<p>As if the preceding were not enough, I also noticed,\nassuming that the program did not stop and\noffer choices if the word was in its memory, that <em>oligopsony</em>\nis in, but <em>psychoneurotic</em> is not; <em>Winston</em> is in,\n<em>Churchill</em> is not; <em>isosceles</em> is in, <em>scalene</em> is not.</p>\n<p>It is a good thing that the technical staff at\nMicroSoft is not being asked to field questions about its\nSpelling Check; I am not sure I would want to hear the\nanswers.</p>\n<p>Finally, it might be worth mentioning that the\nprogram has the capacity to store in a temporary\nmemory buffer about 100 words (proper names, for\ninstance) that it has identified as not stored in its dictionary.\nThe first time such a word is encountered, if\nthe operator chooses GO ON, the program stores it and\nwill recognize it when it recurs, obviating the need to\nrepeat the GO ON command.  For example, if you are\nwriting an article on <em>Churchill</em>, not listed in the\n37,000-entry dictionary, the program will stop at the\nfirst encounter; but once you have signaled it to GO ON,\nit will pass over any further repetitions of <em>Churchill</em>.\nWhen the temporary memory has been filled, the following\nmessage appears on the screen, which makes\nme wonder why I am relying on the program at all:</p>\n<blockquote>\n<p>NO FURTHER WORDS CAN BE REMEMBERED FOR CORRECT\nMULTIPLE OCCURRANCES OR FOR GO ON.</p>\n<p><em>Spelling check</em>, <em>check thyself!</em></p>\n</blockquote>\n<h1></h1>",
  "preview": "<link rel=\"type\" href=\"ObiterDicta\"> <h1 data-rel=\"title\">OBITER DICTA: <em>Computational Lexicography</em></h1> <p><em>Laurence Urdang</em></p> <p>I recently purchased a new computer, and, because\nit operated on a system different from the one of\nmy old computer, I asked a few friends to recommend\na word-processing package that I might.find useful.  I\nwas particularly interested in one that would allow me\nto designate a variety of typestyles during keyboard-ing,\nideally one that showed the styles on the monitor\nas the text was being typed.</p> <p>Those who are familiar with computers or do not\nwant to know about them should skip to the next paragraph.\nFor those who are unfamiliar with computers\nand the need for a word-processing package, I should\nexplain that when you buy what is fondly call a “personal”\ncomputer, you get three pieces of equipment\n(though they may be combined in some models or\nmakes): a rectangular box with some slots in the front\nand sockets in the back, a monitor, which is nothing but\na small TV set, and a keyboard, which looks like an\nordinary typewriter keyboard but, in many models sold\ntoday, has a number of additional keys alongside those\nfor the familiar alphanumeric characters: on mine, nestled\namong some control keys on the right side is what is\ncalled a “number pad,” which resembles the key arrangement\none sees on a small adding machine or calculator;\non the left side is a double bank of five keys\nmarked “F1” through “F10” which, when pressed alone\nor in combination with another key, perform certain\nfunctions, some of which are useful, others of which are\nevidently thought useful by the manufacturer but\nwhich I never use.  These boxes come with wires (called\ncables for some reason) that allow them to be connected\nto one another and into a power source.  The trick is\nthat they will not do anything unless and until you have\ninstalled what is called a Disk Operating System, which\ncomes with the machine.  After it has been installed, the\nDOS, as it is called (once identified, nothing in computerese\nis ever called by its full name again: a Personal\nComputer becomes a PC; a Disk Operating System\nbecomes a DOS; if it is made by a company called\nMicroSoft, it is called MS/DOS), performs certain functions,\nthough rarely any that anyone but a computer\nspecialist would want to perform.  In order to do something\nuseful, you have to buy a program, which is a\npackage consisting of a number of diskettes and a manual.\nA diskette is also called a “floppy”; the reason for\nthe name is not immediately apparent (nor why the\nitem is called a “diskette”, for that matter), but all\nbecomes clear.  The so-called diskette is a flat black\nsquare of rather tough plastic with a hole in the middle\nand an oblong slot on each of the flat sides; it is said to\nbe 5¼ inches square, but that is a lie: as the only person\nwho probably ever measured one of these things, I can\ntell you it is 5 3/16 inches square; that may seem irrelevant,\nbut it is only the beginning of the Great Deception.\nInside this square plastic casing (which you should\nnever open) is a flimsy flat black plastic papadum.  If\nthe diskette is placed in the slot of the machine, a motor\nengages the center of the disk inside and spins it around\nat a great speed so that portions of it are exposed as they\npass by the oblong slot, allowing them to be “written\non” or “read” by some device inside the box.  The diskettes\nthat contain programs have information on them\nthat the computer “understands” and translates into a\nnumber of commands that make the machine do certain\nthings.  The things done depend on what kind of\nprogram is on the diskette.</p> <p>I bought a word-processing program called Framework\nII.  It is quite versatile and, as I required, allows\nme to create certain kinds of files in which I am able to\nstyle the text as I wish, but I shall not go into that here.\nFramework is sold by Ashton-Tate, a Silicon-Valley concern\nthat makes quite good programs but, like most of\nthe “software” companies, produces such abominable\nmanuals with directions for using the programs that\nthey have to maintain a staff of several dozen “technical\npersonnel” who are on duty about 12 hours a day beginning\nat six in the morning (California time) merely in\norder to answer the questions of confused customers.\nThis failing appears to be endemic to the industry: I\nrecently spoke with an executive of Okidata, a manufacturer\nof a very good computer (laser) printer, who\ntold me that his technical staff answers 60,000 telephone\nqueries a month.  I pointed out to him that if they\nmade available a proper manual the number of calls\ncould probably be reduced to 6,000.  Only the telephone\ncompany was profiting from such ineptitude.</p>"
}