{
  "type": "Article",
  "title": "A Word About Word Processing—Reminiscences",
  "author": "Laurence Urdang",
  "location": "Editor,",
  "html": "<link rel=\"type\" href=\"Article\"><h1 data-rel=\"title\">A Word About Word Processing—Reminiscences</h1>\n<p><em><span data-rel=\"author\">Laurence Urdang</span> <span data-rel=\"location\">Editor,</span></em> VERBATIM</p>\n<p>By this time, everyone ought to be familiar with the term\n<em>word processing</em>, notwithstanding the fact that linguists\nhave been struggling for a century to define <em>word</em>.  From the\nstandpoint of those in the computer biz, <em>word</em> (in this context)\nmeans 'any collection of characters preceded and followed by a\nspace.'  In technical computerese, <em>word</em> (or <em>machine word</em>) is “a\nstandard unit of information consisting of a fixed number of\nbits and treated as a single unit by the computer.” [<em>RHD</em>].\nComputers have been processing words for many years; only\nrecently have they been called upon to do word processing.  If\nthere is no confusion in the reader's mind between the two\ndefinitions, he should note the critical phrase “consisting of a\nfixed number of bits” in the second: words in natural language\nand in word processing do not, of course, consist of a fixed\nnumber of bits—or, for that matter, bytes 'a unit of information\nconsisting of eight bits.'</p>\n<p>If all this is somewhat confusing, one must bear in mind\nthat these terms were given to us by that great gang of illiterati\nwho gave us <em>programming</em> (with two <em>ms</em>, where, for American\nspellers, one would have sufficed), exciting advertising copy\nthat includes gems like “The enormity of Santa's job...” [from\na Silicon Valley Systems advertisement in <em>Creative Computing</em>,\nFebruary 1983], and, to choose a brief sampling, fertile ground\nfor onomasticians who have run out of given names, surnames,\nplacenames, and streetnames, and would like to record names\nof programs like <em>Chomper, Snakman, Trashman, Money\nMunchers, Bug Battle, Laser Bounce, Monster Mash, Pig Pen,\nLaf Pak, Phaser Fire, Tunnel Terror, Crisis Mountain,</em> and\n<em>Crazey Mazey</em>, all reviewed in <em>Creative Computing</em>, February\n1983.  If that list isn't long enough, consider <em>Fort Apocalypse,\nReptilian, Claim Jumper, Shamus, Worm War I</em>, and <em>Escape\nfrom Vulcan's Isle</em> in which you are “shipwrecked on an\nuncharted island,... attacked by winged demons, threatened\nby an explosive volcano, and hunted by flesh-eating monsters”\n—all courtesy of your Atari, Apple—or whatever—\nmicrocomputer.  Today, everyone in England, where <em>program</em> is\nnormally spelt <em>programme</em>, has been learning to spell it <em>program</em>\nwhen referring to computers.  The paucity of imagination in\nthat computer crowd has also disturbed the senses of <em>language</em>.\nGod knows we had enough metaphors for that word but have\nnow had the sense added that includes COBOL, FORTRAN, and\nso forth to further addle our brains.  At least we have seen some\nserious comments, by those familiar with computers, aimed at\ndisabusing us of the term <em>electronic brain</em>, pointing out that the\nanalogy between the human brain and the computer is a totally\nfalse one: although computers can sort and organize and\ngenerally process information at incredible speeds, they cannot\n(yet) think for themselves (and it is unlikely that they will be\nable to do so for some time to come, Hal notwithstanding).  The\nanalogy is not false for certain functions that the human brain\nperforms; for the other functions, like exercising judgment and\nimagination, people still outperform machines, though one is\nbound to add that it depends on which people.</p>\n<p>Considering the recent encroachments by computers into\nthe sphere of publishing, chiefly through word processing, it is\na great pity that those who prepare the programs and who\nwrite the manuals are not more literate and more careful in\ntheir exposition.  It is rapidly becoming apparent to many\n(though it was quite obvious to me more than twenty years\nago) that programming is better done by idiot savants (or\ntwelve-year-olds): their minds are relatively unencumbered by a\npredisposition to the distracted, creative thinking, born of\nintelligence and experience, that characterizes the reasoning\nadult.  However good the programs may be, using them is quite\nanother matter: since the manual is usually written by the\nprogrammer, more often than not it omits important information\nbecause it is so “obvious” to the writer.  What is invariably\noverlooked is the fact that an enormous number of people now\nowning microcomputers (also called “personal computers”)\nhave no experience or training in computers at all.  They really\ndo not need any to make those devices behave, but they do\nneed guidance, comfort, and redundancy to help them through\nnovel experiences with new programs.  One manual accompanying\na microcomputer that was introduced in 1982 had no\nindex.  Thus, though I was aware that the program could\nperform a particular function because I recalled having seen it\nwhen reading the manual, I had to reread the manual to\ndiscover the proper command, as there was no way to look it\nup in an index.  Happily, that shortcoming was rectified in a\nmore recent edition (which, curiously, has Appendix Q following\nAppendix R, an arrangement I have still been unable to\nfathom).</p>\n<p>As for word processing itself, it is scarcely “new”: using\nsystems I designed, we did word processing as long ago as\n1960, when I first started organizing the compilation of the\n<em>Random House Unabridged</em>.  Because the keyboards and other\nparaphernalia now available for keyboarding text into machine-readable\nform were not yet available, we used typewriterlike\nmachines that produced a continuous punched paper tape,\neach key depression producing a discrete code.  This tape—we\neventually produced 750,000 feet of it in the course of\npreparing the <em>RHD</em>, all in all some 65 million characters—was\nconverted to magnetic tape by a special device.  The magnetic\ntape could then be processed by a computer.</p>\n<p>In addition to allowing for the sorting of data by computer,\nthe advantage of having the text in machine-readable\nform was greatly enhanced by the prospect of being able to\nfeed a specially prepared version of the tape into an automatic\ntypesetting machine, thus saving the cost of keyboarding the\ntext all over again (and, of course, of proofreading it again).</p>\n<p>In 1968, I attended the Fall Joint Computer Conference,\nheld someplace out west, possibly in Las Vegas.  There, I visited\nthe booths of a large number of equipment manufacturers,\nasking their engineers (when they were available) to build for\nme a device that consisted of a keyboard, a CRT (cathode-ray\ntube = TV screen), and a mechanism that would allow for the\nstorage of data on magnetic tape.  (There were no “floppy” or\n“hard” discs generally available at that time; moreover, an\nearlier device, called the Unityper, was supposed to enable the\nuser to record bits on magnetic tape, but it did not work.) One\nafter another, the engineers I spoke with looked at me as if I\nwere daft, then offered to sell me the components they\nmanufactured—keyboards, CRTs, etc.—and said I should put\nthem together in my own laboratory.  When I explained that I\nhad no laboratory (except in my head), they turned away to\ntalk with someone enquiring about a more immediate and\npractical application of their products.  Four years later, such\ndevices (now known as microcomputers, word processors, etc.)\nmade their debut, as did “hard” discs, and, naturally, no one\nremembered the mad fellow who had accosted people at the\nFJCC.</p>\n<p>The keyboarding device I modified in 1960 was a Remington\nRand Synchrotape machine.  Soon, Remington was to be\nreplaced by Sperry and the manufacture of Synchrotapes was\nto cease, requiring me to use Flexowriters, a similar (but less\nversatile) device made by Friden.  The original Synchrotape,\nwhen modified, allowed us to keyboard 160 discrete characters\nin sixteen fonts of type (plus superior and inferior characters)—\nand to read them from typescript with only an hour's training,\na degree of versatility not yet equaled by today's equipment.\n[As I was enjoined from discussing these matters prior to the\npublication of the <em>RHD</em>, the first revelations were made at the\n1966 annual meeting of the American Documentation Institute\n(now the American Society for Information Sciences) in a\npaper entitled “The Use of Typographic Coding for Information\nRetrieval.”  That may seem an odd way of approaching the\nsubject, but at the time I felt it was the only approach I could\nuse that would hold any meaning or interest for the members\nof the ADI.  Offprints of that paper are available on request\nfrom me at VERBATIM.]</p>\n<p>Since those days, we have been using computers and\ncomputer-driven typesetting machines extensively in the preparation\nof dictionaries and other reference books—more than 100\nsince 1969.  There are many applications for computers in\npublishing (aside from their use at the business end).  For\ninstance, we are no longer restricted to working in strict\nalphabetical order, because the computers are so fast that they\ncan sort large files into “dictionary order” in a few hours.  The\nadvantages of being able to define all together words dealing\nwith a given subject category yield better, more consistently\nstyled definitions.  With the text in machine-readable form, we\ncan search for particular kinds of information and list them\nseparately (e.g., individuals in a biographical work that are still\nliving so that we can insert a death date when necessary); we\ncan make certain that every word used in the defining\nvocabulary is an entry in the dictionary; we can check the\nconsistency of definition vocabulary in dictionaries that make\nuse of a restricted list of words; we can check cross references\n(and variants) automatically; the computer can be relied upon\nto alphabetize entries with greater accuracy (and speed) than\none can expect from people; for some reference books, we can\nextract indexes automatically, relieving human indexers of\nroutine work and leaving for them the “content” indexing they\ncan do so much better than computers.  There are many other\nfunctions that can be performed by computers far more\nquickly, accurately, and less expensively than people.  Typographically,\nan entire book (which may run to too many pages)\ncan be reset in a slightly smaller type size, with less leading\nbetween the lines in order to make it fit to specified dimensions.\nModern computer-driven composing machines not only\nset fully made-up pages, with page numbers and headings\nready for printing, but can also vary the size of the type by as\nlittle as one tenth of a point, vertically and horizontally—that is\n1/72 of an inch—and can vary interlinear spacing by increments\nof 1/1000 of an inch.  An entire book can now be typeset in a\nmatter of hours.  Since the advantages of such speed may not\nbe immediately apparent, it would be worthwhile to point out\nthat while formerly a publisher might have had to tie up a\nsubstantial investment in a large, complex manuscript for\nseveral months during which it was being typeset and proofread,\ntoday the manuscript can be keyboarded and proofread\nwhile it is being written, so that the entire book is in machine-readable\nform virtually at the same time it is being completed,\nreducing considerably the gap between completion of the\nwriting and the date when books are available for sale.</p>\n<p>Obviously, the benefits of applying these techniques to the\npublication of fiction are somewhat limited.  Yet, the publisher\nof a paperback edition of a hardcover work need only reset it\nautomatically (and cheaply) for his edition, which, again, may\nthen appear in fewer pages, less expensively, than the original.\nThe resetting is a matter of hours and does not require a new\nproofreading effort.</p>\n<p>Complicated textbooks also present special problems of\npage composition as well as comprehensive content indexing,\nand the application of computers to their preparation and\ntypesetting may not be feasible or economical on a broad scale.\nNonetheless, when computers are used judiciously and properly\nin performing the functions they can do better than people—\nespecially the routine jobs—they have proved outstandingly\nsuccessful and profitable.  In this regard, it is important to note\nthat one would be foolish to use computers to do things they\nare unsuited for, just as one would scarcely use a Jumbo Jet to\ngo crosstown or, for that matter, take any kind of airplane to\ntravel a distance covered by a car in an hour or so: it takes that\nlong just to get to the airport.  Like most machines, computers\ndo very well those things they are suited for, and it is silly to\nuse them inappropriately.</p>\n<p>Microcomputers and the word processing programs available\nfor them offer writers and publishers the opportunity for\nlower cost, reduced time from concept to publication, and\ngreater efficiency.  For documents and other publications that\nneed not be graphic-arts quality, the “daisy-wheel” printers\nthat can be driven by microcomputers to produce justified text\nare quite adequate, despite the slower operating speeds—about\n40 to 50 characters per second—of such machines.  For quicker,\nproof-quality output, inexpensive matrix devices are available\nthat print at speeds in excess of 250 characters per second.  In\nour operations we employ many free-lance writers, and we\nhave found it economical to provide many of them—depending\non their assignments—with microcomputers; they keyboard text\ndirectly onto diskettes and send them to us for printing and\nprocessing, their typewriters having fallen into disuse.</p>\n<p>For those who fear or despise computers, there may be no\nanswer, for they were born into the wrong century.  Yet, I\nwonder if they still write on vellum using a quill they have\nplucked from a passing goose or if they use paper and a\nfountain pen or ballpoint.  It is not easy to change one's habits\nand prejudices, and for many it may not be necessary.\nLearning to use a microcomputer is no more difficult than\nchanging from a mechanical typewriter to an electric or from a\nstick shift to an automatic transmission.  The “hands-on” sensation\nis somewhat mitigated, it is true, but then consider the\nnumber of times you have retyped a page because you wished\n(or had) to change one word.</p>\n<p>It must also be said that one must change ingrained\nattitudes toward information and how it has been processed\ntraditionally.  One favorable advantage of old-fashioned methods,\nthat of browsing, is sacrificed to a certain extent.  But\nagainst that loss must be weighed the benefit of time and\nenergy saved by being able to key a short command to a\nmicrocomputer word-processing program that will, in a matter\nof seconds, find every instance of a given character or word in\na long, machine-readable document.  Many of the newer,\n“personal” microcomputers are “user-friendly,” a term becoming\nmore and more popular in the trade.  As I mentioned at the\nstart of this article, the novice must tread carefully because the\nprogrammers and manufacturers who prepare what they consider\nto be “user-friendly” manuals often fall far short of their\ngoals.  Perhaps the best advice for a beginner is to suggest a\nsubscription to one or more of the several periodicals published\nfor users of microcomputers.  These, now available in many\nlibraries, will help to acquaint the novice with the many\ndevices and programs that can be bought from local shops and\nthrough mail order.</p>\n<p>This is not a “plea” to urge everyone to buy a microcomputer,\nany more than I would try to convince an apartment-dweller\nto buy a lawn mower.  But there are many who might\nbenefit from the many time-saving uses of a computer, and for\nthem I can only hope that these comments have helped remove\nsome of the apprehensions and misapprehensions with which\nwe all face the unknown.</p>",
  "preview": "<link rel=\"type\" href=\"Article\"> <h1 data-rel=\"title\">A Word About Word Processing—Reminiscences</h1> <p><em><span data-rel=\"author\">Laurence Urdang</span> <span data-rel=\"location\">Editor,</span></em> VERBATIM</p> <p>By this time, everyone ought to be familiar with the term\n<em>word processing</em>, notwithstanding the fact that linguists\nhave been struggling for a century to define <em>word</em>.  From the\nstandpoint of those in the computer biz, <em>word</em> (in this context)\nmeans 'any collection of characters preceded and followed by a\nspace.'  In technical computerese, <em>word</em> (or <em>machine word</em>) is “a\nstandard unit of information consisting of a fixed number of\nbits and treated as a single unit by the computer.” [<em>RHD</em>].\nComputers have been processing words for many years; only\nrecently have they been called upon to do word processing.  If\nthere is no confusion in the reader's mind between the two\ndefinitions, he should note the critical phrase “consisting of a\nfixed number of bits” in the second: words in natural language\nand in word processing do not, of course, consist of a fixed\nnumber of bits—or, for that matter, bytes 'a unit of information\nconsisting of eight bits.'</p> <p>If all this is somewhat confusing, one must bear in mind\nthat these terms were given to us by that great gang of illiterati\nwho gave us <em>programming</em> (with two <em>ms</em>, where, for American\nspellers, one would have sufficed), exciting advertising copy\nthat includes gems like “The enormity of Santa's job...” [from\na Silicon Valley Systems advertisement in <em>Creative Computing</em>,\nFebruary 1983], and, to choose a brief sampling, fertile ground\nfor onomasticians who have run out of given names, surnames,\nplacenames, and streetnames, and would like to record names\nof programs like <em>Chomper, Snakman, Trashman, Money\nMunchers, Bug Battle, Laser Bounce, Monster Mash, Pig Pen,\nLaf Pak, Phaser Fire, Tunnel Terror, Crisis Mountain,</em> and\n<em>Crazey Mazey</em>, all reviewed in <em>Creative Computing</em>, February\n1983.  If that list isn't long enough, consider <em>Fort Apocalypse,\nReptilian, Claim Jumper, Shamus, Worm War I</em>, and <em>Escape\nfrom Vulcan's Isle</em> in which you are “shipwrecked on an\nuncharted island,... attacked by winged demons, threatened\nby an explosive volcano, and hunted by flesh-eating monsters”\n—all courtesy of your Atari, Apple—or whatever—\nmicrocomputer.  Today, everyone in England, where <em>program</em> is\nnormally spelt <em>programme</em>, has been learning to spell it <em>program</em>\nwhen referring to computers.  The paucity of imagination in\nthat computer crowd has also disturbed the senses of <em>language</em>.\nGod knows we had enough metaphors for that word but have\nnow had the sense added that includes COBOL, FORTRAN, and\nso forth to further addle our brains.  At least we have seen some\nserious comments, by those familiar with computers, aimed at\ndisabusing us of the term <em>electronic brain</em>, pointing out that the\nanalogy between the human brain and the computer is a totally\nfalse one: although computers can sort and organize and\ngenerally process information at incredible speeds, they cannot\n(yet) think for themselves (and it is unlikely that they will be\nable to do so for some time to come, Hal notwithstanding).  The\nanalogy is not false for certain functions that the human brain\nperforms; for the other functions, like exercising judgment and\nimagination, people still outperform machines, though one is\nbound to add that it depends on which people.</p> <p>Considering the recent encroachments by computers into\nthe sphere of publishing, chiefly through word processing, it is\na great pity that those who prepare the programs and who\nwrite the manuals are not more literate and more careful in\ntheir exposition.  It is rapidly becoming apparent to many\n(though it was quite obvious to me more than twenty years\nago) that programming is better done by idiot savants (or\ntwelve-year-olds): their minds are relatively unencumbered by a\npredisposition to the distracted, creative thinking, born of\nintelligence and experience, that characterizes the reasoning\nadult.  However good the programs may be, using them is quite\nanother matter: since the manual is usually written by the\nprogrammer, more often than not it omits important information\nbecause it is so “obvious” to the writer.  What is invariably\noverlooked is the fact that an enormous number of people now\nowning microcomputers (also called “personal computers”)\nhave no experience or training in computers at all.  They really\ndo not need any to make those devices behave, but they do\nneed guidance, comfort, and redundancy to help them through\nnovel experiences with new programs.  One manual accompanying\na microcomputer that was introduced in 1982 had no\nindex.  Thus, though I was aware that the program could\nperform a particular function because I recalled having seen it\nwhen reading the manual, I had to reread the manual to\ndiscover the proper command, as there was no way to look it\nup in an index.  Happily, that shortcoming was rectified in a\nmore recent edition (which, curiously, has Appendix Q following\nAppendix R, an arrangement I have still been unable to\nfathom).</p>"
}